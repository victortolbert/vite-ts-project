@import "variables";
/*@import "utilities";*/
@import "shared/mixins";
@import "shared/utilities";

// :empty:not(.eCheckbox) {
//   display: none;
// }


.flexRowStartWrap {
  @include flex(
    $justify: flex-start,
    $align: flex-start,
    $direction: row,
    $wrap: wrap
  );
}

.flexRowStartNoWrap {
  @include flex(
    $justify: flex-start,
    $align: flex-start,
    $direction: row,
    $wrap: nowrap
  );
}

.flexRowEndNoWrap {
  @include flex(
    $justify: flex-start,
    $align: flex-start,
    $direction: row,
    $wrap: nowrap
  );
}

.flexRowSpaceBetweenWrap {
  @include flex(
    $justify: space-between,
    $align: flex-start,
    $direction: row,
    $wrap: wrap
  );
}

.flexRowSpaceBetweenNoWrap {
  display: flex;
  align-items: center;
  justify-content: space-between;

  // @include flex(
  //   $justify: space-between,
  //   $align: flex-start,
  //   $direction: row,
  //   $wrap: nowrap
  // );
}

.flexRowSpaceAroundWrap {
  @include flex(
    $justify: space-around,
    $align: flex-start,
    $direction: row,
    $wrap: wrap
  );
}

.flexColumnStartNoWrap {
  @include flex(
    $justify: flex-start,
    $align: flex-start,
    $direction: column,
    $wrap: nowrap
  );
}

.flexColumnStartWrap {
  @include flex(
    $justify: flex-start,
    $align: flex-start,
    $direction: column,
    $wrap: wrap
  );
}

.flexColumnCenter {
  @include flex(
    $justify: center,
    $align: center,
    $direction: column,
    $wrap: wrap
  );
}

.baseContainer {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  min-height: 72px;
  margin-top: 8px;
  margin-bottom: 4px;
  padding-top: 8px;
  padding-bottom: 8px;
  // border-top: 0px solid gray;
  // border-right: 0px solid gray;
  // border-bottom: 2px solid gray;
  // border-left: 0px solid gray;

  // .bg-white
  background-color: $color-white;

  // .border
  border-width: 1px;

  // .rounded
  border-radius: 0.25rem;

  // .shadow
  --tw-shadow-color: 0, 0, 0;
  --tw-shadow: 0 1px 3px 0 rgba(var(--tw-shadow-color), 0.1),
    0 1px 2px 0 rgba(var(--tw-shadow-color), 0.06);
  -webkit-box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.labelContainer {
  // padding-top: 12px;
  padding-right: 16px;
  padding-left: 12px;
}

.componentLabel {
  padding-right: 10px;
}

.slotContainer {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: flex-end;
  justify-content: flex-end;
  max-width: 70%;
}

.slotRow {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: flex-start;
  justify-content: flex-start;
}

.bottomSlots {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: flex-start;
  justify-content: flex-start;
  margin-bottom: 10px;
}

.choiceContainer {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: flex-start;
  padding-right: 16px;
}

.pifIconContainer {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-start;
  padding: 0px 0px 4px 12px;
}

.fieldIcon {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
  justify-content: flex-start;
  width: 98%;
  margin: 8px;
  padding-left: 12px;
}

.assetCount {
  padding-top: 16px;
  padding-right: 4px;
  cursor: pointer;
}

.iconBorder {
  border-top: 1px solid black;
  border-right: 1px solid black;
  border-bottom: 1px solid black;
  border-left: 1px solid black;
}

.cbContainer {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: flex-start;
  padding-right: 20px;
}

.cbMultiple {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: middle;
  justify-content: flex-start;
  padding-top: 4px;
  padding-bottom: 4px;
}

.eCheckbox {
  position: relative;
  width: 2rem;
  height: 2rem;
  margin: 4px;
  margin-right: 12px;
  padding-right: 4px;
  text-align: center;
  background-color: $color-primary-100;
  border-top: 0.5px solid $color-primary;
  border-right: 0.5px solid $color-primary;
  border-bottom: 0.5px solid $color-primary;
  border-left: 0.5px solid $color-primary;
  border-radius: $base-border-radius;
  cursor: pointer;
}

.answered {
  background-color: $color-secondary-300;
  // &:after {
  //   position: absolute;
  //   content: "â€¢";
  //   line-height: 1;
  //   font-size: 2em;
  //   top: 0px;
  //   right: 0px;
  //   bottom: 0px;
  //   left: 0px;
  // }
}

/*  */
.flexStart {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: top;
  justify-content: flex-start;
  padding-top: 4px;
  padding-bottom: 4px;
}

/*  */
.boxLabel {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: top;
  justify-content: flex-start;
}

/*  */
.tb {
}

.tbNum {
  width: 70px;
}

.tbAlpha {
  width: 220px;
}

.tbArea {
  width: 420px;
}

/*  */
.iconEnabled {
  padding-right: 12px;
  cursor: pointer;
}

.iconDisabled {
  padding-top: 8px;
  padding-right: 12px;
  cursor: auto;
}

/*  */
.keyPadContainer {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: flex-end;
  justify-content: flex-end;
  width: 150px;
}

.keyPadRow {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: flex-end;
  justify-content: flex-end;
  padding-right: 12px;
  padding-left: 12px;
}

.keyPad {
  width: 40px;
  margin-right: 4px;
  margin-bottom: 4px;
  text-align: center;
  border-radius: 2px 2px 2px 2px;
}

.keyEnabled {
  background-color: #3366ff;
  cursor: pointer;
}

.keyDisabled {
  background-color: lightsteelblue;
  cursor: none;
}

/*  */
.numericContainer {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: flex-end;
  justify-content: flex-end;
}

.numericLabel {
  position: relative;
  bottom: 8px;
  width: 20px;
  padding-top: 12px;
}

.numericValue {
  padding-right: 4px;
}

// Property Inspection form labels
.newSection {
  font-size: x-large;
}

.validatorSmall {
  font-size: small;
  color: red;
  padding-left: 5px;
  padding-top: 8px;
}

.cameraText {
  @include font-props($fontSize: small, $color: red, $weight: 600);
  padding-left: 8px;
  padding-top: 5px;
}

.sectionContainer {
  margin-top: 1.5rem;
  // @include font-props($fontSize: x-large, $color: navy, $weight: 800);
  @include flex(
    $justify: space-between,
    $align: flex-start,
    $direction: row,
    $wrap: nowrap
  );

  background-color: $color-primary-200;
  padding: 1rem;
  font-weight: bold;
  font-size: 1.25rem;

  // height: 55px;
  width: 100%;
  // margin-bottom: 2px;
  // padding-top: 12px;
  // padding-left: 10px;
  // padding-right: 10px;
}

.sectionHeader {
  @include font-props($fontSize: large, $color: black, $weight: 600);
  padding-left: 10px;
}

.noMargin {
  margin-bottom: 0px !important;
  margin-top: -8px !important;
}

.setHeight {
  height: auto;
  overflow: visible;
  width: 100%;
}

.pageHeader {
  @include font-props($fontSize: 18px, $color: #474b4f, $weight: 600);
  padding: 10px;
  @include flex(
    $justify: space-between,
    $align: center,
    $direction: row,
    $wrap: nowrap
  );
}

.slider {
  -webkit-appearance: none;
  /* Override default CSS styles */
  appearance: none;
  height: 25px;
  /* Specified height */
  background: #d3d3d3;
  /* Grey background */
  outline: none;
  /* Remove outline */
  opacity: 0.7;
  /* Set transparency (for mouse-over effects on hover) */
  -webkit-transition: 0.2s;
  /* 0.2 seconds transition on hover */
  transition: opacity 0.2s;
}

/* Mouse-over effects */
.slider:hover {
  opacity: 1;
  /* Fully shown on mouse-over */
}

/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */
.slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  /* Override default look */
  appearance: none;
  width: 25px;
  /* Set a specific slider handle width */
  height: 25px;
  /* Slider handle height */
  background: #0d9bff;
  /* Green background */
  cursor: pointer;
  /* Cursor on hover */
}

.slider::-moz-range-thumb {
  width: 25px;
  /* Set a specific slider handle width */
  height: 25px;
  /* Slider handle height */
  background: #0d9bff;
  /* Green background */
  cursor: pointer;
  /* Cursor on hover */
}
